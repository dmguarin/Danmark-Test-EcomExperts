'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var css = require('../../utilities/css.js');
var Bleed$1 = require('./Bleed.scss.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const Bleed = ({
  spacing,
  horizontal = '5',
  vertical,
  top,
  bottom,
  left,
  right,
  children
}) => {
  const getNegativeMargins = direction => {
    const xAxis = ['left', 'right'];
    const yAxis = ['top', 'bottom'];
    const directionValues = {
      top,
      bottom,
      left,
      right,
      horizontal,
      vertical
    };

    if (directionValues[direction]) {
      return directionValues[direction];
    } else if (!yAxis.includes(direction) && horizontal) {
      return directionValues.horizontal;
    } else if (!xAxis.includes(direction) && vertical) {
      return directionValues.vertical;
    } else {
      return spacing;
    }
  };

  const negativeTop = getNegativeMargins('top');
  const negativeLeft = getNegativeMargins('left');
  const negativeRight = getNegativeMargins('right');
  const negativeBottom = getNegativeMargins('bottom');
  const style = {
    '--pc-bleed-margin-bottom': negativeBottom ? `var(--p-space-${negativeBottom})` : undefined,
    '--pc-bleed-margin-left': negativeLeft ? `var(--p-space-${negativeLeft})` : undefined,
    '--pc-bleed-margin-right': negativeRight ? `var(--p-space-${negativeRight})` : undefined,
    '--pc-bleed-margin-top': negativeTop ? `var(--p-space-${negativeTop})` : undefined
  };
  return /*#__PURE__*/React__default["default"].createElement("div", {
    className: Bleed$1["default"].Bleed,
    style: css.sanitizeCustomProperties(style)
  }, children);
};

exports.Bleed = Bleed;
